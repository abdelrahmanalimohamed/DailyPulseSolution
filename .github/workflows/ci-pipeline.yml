name: Deploy and Run .NET App Without Systemd

on:
  push:
    branches:
      - master  # Adjust this based on your branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Publish .NET Application
      run: |
        dotnet publish -c Release -o ./publish

    - name: Copy Published Files to Server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_IP }}  # Server IP from secrets
        username: ${{ secrets.SERVER_USER }}  # Username from secrets
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH Private Key from secrets
        source: ./publish/*
        target: /home/${{ secrets.SERVER_USER }}/Downloads/testpublish
        port: 22

    - name: Run .NET Application on Remote Server
      run: |
        ssh -t -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        cd /home/${{ secrets.SERVER_USER }}/Downloads/testpublish

            # Kill any running process of the app
            pids=$(pgrep -f "dotnet DailyPulse.WebAPI.dll")
            if [ -n "$pids" ]; then
              echo "Killing existing app processes: $pids"
              sudo kill -9 $pids
            else
              echo "No existing app process found"
            fi
  
            # Make sure the .dll file exists
            if [ -f "DailyPulse.WebAPI.dll" ]; then
              echo "Starting new instance of .NET app..."
              dotnet DailyPulse.WebAPI.dll --urls "http://192.168.121.17:5000"
            else
              echo "Error: dotnet application file not found!"
              exit 1
            fi
          EOF
  